services:
  frontend:
    image: todo-frontend
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile 
    volumes:
      - ./todo-frontend/:/usr/src/app
    environment:
      - REACT_APP_BACKEND_URL=/api/
    container_name: todo-frontend
    depends_on:
      - backend

  backend:
    image: todo-backend
    build:
      context: ./todo-backend 
      dockerfile: Dockerfile 
    volumes:
      - ./todo-backend/:/usr/src/app
    environment:
      - NODE_ENV=production
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
      - REDIS_URL=redis://redis:6379
    container_name: todo-backend
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo
    logging:
      driver: "none"
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes: 
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db

  redis:
    image: redis
    logging:
      driver: "none"
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data

  nginx:
    image: nginx:1.20.1
    logging:
      driver: "none"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - frontend 
      - backend
      - mongo
      - redis